{
  "_args": [
    [
      {
        "raw": "require.async",
        "scope": null,
        "escapedName": "require.async",
        "name": "require.async",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/karthik/Desktop/Alexa/alexaaaaa/alexa-leaving-time-master"
    ]
  ],
  "_from": "require.async@latest",
  "_id": "require.async@0.1.1",
  "_inCache": true,
  "_location": "/require.async",
  "_npmUser": {
    "name": "cadorn",
    "email": "christoph@christophdorn.com"
  },
  "_npmVersion": "1.3.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "require.async",
    "scope": null,
    "escapedName": "require.async",
    "name": "require.async",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/require.async/-/require.async-0.1.1.tgz",
  "_shasum": "68db50c5b9cc731e1a01e5a248bbcb2fda0b7d4f",
  "_shrinkwrap": null,
  "_spec": "require.async",
  "_where": "/home/karthik/Desktop/Alexa/alexaaaaa/alexa-leaving-time-master",
  "dependencies": {},
  "description": "require.async =============",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "68db50c5b9cc731e1a01e5a248bbcb2fda0b7d4f",
    "tarball": "https://registry.npmjs.org/require.async/-/require.async-0.1.1.tgz"
  },
  "engines": {
    "node": ">=0.6"
  },
  "main": "require.async.js",
  "maintainers": [
    {
      "name": "cadorn",
      "email": "christoph@christophdorn.com"
    }
  ],
  "name": "require.async",
  "optionalDependencies": {},
  "pm": "npm",
  "publish": true,
  "readme": "require.async\n=============\n\n[![Build Status](https://secure.travis-ci.org/pinf/require.js.png)](http://travis-ci.org/pinf/require.js)\n\n\nBackground\n----------\n\n[NodeJS](http://nodejs.org/) has a synchronous [`require()`](http://nodejs.org/api/globals.html#globals_require) because its module loading\nsystem is synchronous.\n\nThis works because NodeJS runs on the server which means IO calls to fetch module code will be fast (< 10 ms).\n\n**But not all module loading systems are synchronous.**\n\nAlmost all module loading systems designed for the browser are **asynchronous** for the express purpose of working around higher IO latencies\nand keeping runtime sizes smaller. They do this by allowing for **incremental loading** of resources and in our case **code bundles**.\n\nCode bundles are sets of statically linked modules that (`exports = require(\"<id>\")`) each other.\n\nOne bundle can require another bundle using `require.async(id, function success(exports), function error(err))`. Notice how\nwe are making an asynchronous call to fetch the next segment of the program we need to execute.\n\nThis approach of composing a program into bundles where one root bundle loads other bundles (which may load further bundles)\nis considered best practice and achieved in different ways by various toolchains.\n\n**All toolchains and runtimes can benefit from `require.async()` used by a developer (instead of `require()`) to indicate\nentry into an OPTIONAL / CONDITIONAL / RARE segment of the program. Programs written in this fashion are more portable.**\n\nThe `require.async` method is inspired by [CommonJS](http://wiki.commonjs.org/wiki/Modules/Async/A) and supported by\nthe [PINF JavaScript Loader](https://github.com/pinf/pinf-loader-js) which can load code bundles conflict free into\nany modern JavaScript runtime.\n\n\nWhat\n----\n\n`require.async` is a module that patches the `require` given to your module by the NodeJS module system.\n\nIt adds the method `require.async(id, function success(exports), function error(err))` which you can use\ninstead of `require(\"<id>\")` to indicate entry into an OPTIONAL / CONDITIONAL / RARE segment of the program.\n\nAll plugin loaders for example should be using `require.async` to asynchronously load plugins.\n\n\nInstall\n-------\n\n    npm install require.async\n\n\nUsage\n-----\n\n`package.json`\n\n    {\n        \"name\": \"test\"\n    }\n\n`main.js`\n\n    require(\"require.async\")(require);\n\n    require.async(\"./package.json\", function(info) {\n        console.log(JSON.stringify(json));\n    })l\n\nRun:\n\n    $ node main.js\n    {\"name\": \"test\"}\n\n\nLicense\n=======\n\nAuthor: [Christoph Dorn](http://christophdorn.com/)\nLicense: [UNLICENSE](http://unlicense.org/)\n",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "node test.js"
  },
  "version": "0.1.1"
}
